package build.desktop.example

import mill._
import mill.api.JarManifest
import mill.javalib._
import mill.javalib.publish._
import mill.scalalib.Assembly.Rule
import mill.scalalib.{AssemblyModule, SbtModule}
import mill.util.JarManifest

import java.util.jar.Attributes.Name

object `package` extends RootModule with SbtModule with PublishModule  with AssemblyModule {

  def artifactName = "desktop-example-cats"

  def scalaVersion = "3.7.3"

  def scalacOptions = super.scalacOptions() ++ Seq(
    "-Wunused:imports",
    "-Xkind-projector",
    //"-Vprofile",
  )

  def repositoriesTask = Task.Anon {
    super.repositoriesTask() ++ Seq(
      coursier.maven
        .MavenRepository("https://gitverse.ru/api/packages/daniilzemskov/maven")
    )
  }

  def ivyDeps = super.ivyDeps() ++ Agg(
    ivy"org.http4s::http4s-core:0.23.32",
    ivy"org.http4s::http4s-ember-client:0.23.32",
  )

  def forkArgs = Seq(
    "-XstartOnFirstThread"
  )

  def moduleDeps = super.moduleDeps ++ Agg(build.desktop.kit)

  def pomSettings = PomSettings(
    "desktop-example-cats",
    "desktop-example-cats",
    "",
    Seq(),
    VersionControl(None, None, None, None),
    Seq()
  )

  def publishVersion = "0.1.0-SNAPSHOT"

  def mainClass = Some("gui4s.desktop.example.ImageExample")

  def assemblyRules = Seq(
    // all application.conf files will be concatenated into single file
    Rule.Append("MANIFEST.MF"),
    Rule.Append("META-INF/MANIFEST.MF"),
    Rule.Append("application.conf"),
  )

  override def manifest : T[JarManifest] = T {
    super.manifest().add(("Multi-Release" -> "true"))
  }
}
